name: Build HushOS APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_android_apk:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clean Buildozer and P4A cache directories
        run: |
          echo "Removing existing .buildozer directory to ensure clean build…"
          rm -rf "$HOME/.buildozer" || true
          rm -rf ".buildozer" || true
          echo "Removing existing python-for-android cache…"
          rm -rf "$HOME/.python-for-android" || true
          rm -rf "/tmp/p4a-build" || true
        shell: bash

      - name: Set up Java Development Kit (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Buildozer and its dependencies (with aggressive P4A reinstall from master)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git zip unzip openjdk-17-jdk autoconf automake libtool \
            pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev \
            liblzma-dev libffi-dev libssl-dev build-essential patch \
            python3-dev perl curl \
            xvfb libmtdev-dev
          
          python3 -m pip install --upgrade setuptools pip wheel
          pip uninstall -y buildozer cython python-for-android || true
          pip install buildozer cython
          pip install git+https://github.com/kivy/python-for-android.git@master
        shell: bash

      - name: Install Python dependencies from requirements.txt
        run: |
          if [ -f requirements.txt ]; then
            echo "Found requirements.txt. Installing packages..."
            pip install -r requirements.txt
          else
            echo "requirements.txt not found. Skipping package installation."
          fi
        shell: bash
      
      # --- NEW STEP TO CHECK KV SYNTAX ---
      - name: Check Kivy file syntax
        run: xvfb-run python check_kv.py
        shell: bash
      # --- END OF NEW STEP ---

      - name: Create API key file for packaging
        run: echo "${{ secrets.SECRET_API_KEY }}" > api_key.txt
        shell: bash

      - name: Force correct buildozer.spec settings
        run: |
          sed -i 's/^android\.build_tools_version.*$/android.build_tools_version = 33.0.2/' buildozer.spec
          sed -i 's/^android\.api.*$/android.api = 33/' buildozer.spec
          sed -i 's/^android\.ndk_version.*$/android.ndk_version = 25b/' buildozer.spec
        shell: bash

      - name: Clear conflicting Android NDK environment variables
        run: |
          echo "ANDROID_NDK_HOME=" >> $GITHUB_ENV
          echo "ANDROID_NDK=" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=" >> $GITHUB_ENV
        shell: bash

      - name: Set Java Memory Options
        run: echo "_JAVA_OPTIONS=-Xmx2048m" >> $GITHUB_ENV
        shell: bash

      - name: Build Kivy Android APK
        run: |
          buildozer -v android debug
        shell: bash

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: hush-os-apk
          path: bin/*.apk
          if-no-files-found: error
