name: Build HushOS APK
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Free up disk space
        run: |
          echo "Initial disk space:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo apt-get autoremove -y
          sudo apt-get autoclean -y
          echo "Disk space after cleanup:"
          df -h
      - name: Set up Python, Buildozer, and Dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer cython
          pip install -r requirements.txt
      - name: Install SDK, Create Config, and Build APK
        run: |
          # --- PART 1: Manual SDK Setup ---
          # All commands are in one step to ensure the environment and paths are consistent.
          ANDROID_SDK_ROOT="${{ github.workspace }}/.buildozer/android/platform/android-sdk"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          echo "Downloading Android cmdline-tools..."
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O tools.zip
          unzip -q tools.zip -d temp
          mv temp/cmdline-tools latest
          rm -rf temp tools.zip
          cd ${{ github.workspace }} # IMPORTANT: Go back to the project root
          SDKMANAGER="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          echo "Accepting all licenses first..."
          yes | $SDKMANAGER --sdk_root=$ANDROID_SDK_ROOT --licenses
          echo "Installing required components (matching buildozer.spec)..."
          yes | $SDKMANAGER --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;34.0.0"
          echo "Accepting licenses again after installation..."
          yes | $SDKMANAGER --sdk_root=$ANDROID_SDK_ROOT --licenses
          
          echo "Verifying build-tools installation..."
          ls -la $ANDROID_SDK_ROOT/build-tools/
          
          echo "Creating build-tools symlink for Buildozer compatibility..."
          # Remove any existing build-tools link
          rm -f $ANDROID_SDK_ROOT/build-tools/build-tools
          # Create the expected path structure
          if [ ! -L "$ANDROID_SDK_ROOT/build-tools" ] && [ -d "$ANDROID_SDK_ROOT/build-tools/34.0.0" ]; then
              cd $ANDROID_SDK_ROOT
              ln -sf build-tools/34.0.0 build-tools/latest
          fi
          
          echo "Verifying installed packages and paths:"
          $SDKMANAGER --list_installed --sdk_root=$ANDROID_SDK_ROOT
          ls -l $ANDROID_SDK_ROOT
          
          # --- PART 2: Create Config Asset ---
          echo "Creating config.json in assets directory..."
          cd ${{ github.workspace }}
          mkdir -p assets
          echo '{"openai_api_key": "${{ secrets.OPENAI_API_KEY }}"}' > assets/config.json
          
          # --- PART 3: Run the Build ---
          echo "Returning to project root and starting the final Buildozer build..."
          cd ${{ github.workspace }}
          pwd
          ls -la buildozer.spec
          buildozer -v android debug
        env:
          GRADLE_OPTS: -Xmx4g -XX:MaxMetaspaceSize=512m -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError
          JAVA_OPTS: -Xmx3g -XX:MaxMetaspaceSize=512m
          _JAVA_OPTIONS: -Xmx3g -XX:MaxMetaspaceSize=512m
          GRADLE_MAX_WORKERS: 2
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: hush-os-apk
          path: bin/*.apk
          if-no-files-found: error
