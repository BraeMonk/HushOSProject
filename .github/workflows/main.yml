# This workflow uses Buildozer's own config commands to ensure the correct
# SDK and build tools are used, providing the most reliable build method.
name: Build Android App
on:
  push:
    branches: [ "main" ]

jobs:
  build-android:
    runs-on: ubuntu-22.04

    steps:
      # 1. Check out your repository's code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Cache the .buildozer directory for faster builds
      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: ~/.buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      # 3. Set up Java Development Kit (JDK) version 17
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 4. Set up the Android SDK environment
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 5. Install all necessary system-level dependencies
      - name: Install system dependencies
        run: |
          echo "deb http://archive.ubuntu.com/ubuntu/ focal main universe" | sudo tee /etc/apt/sources.list.d/focal.list
          sudo apt-get update
          sudo apt-get install -y --allow-unauthenticated \
          git zip unzip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev

      # 6. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # 7. Install Python build tools
      - name: Install Buildozer and Cython
        run: |
          pip install --upgrade pip
          pip install --user buildozer==1.5.0
          pip install --user cython==0.29.34

      # 8. Add Buildozer to PATH
      - name: Add Buildozer to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      # 9. Install SDK and NDK components
      - name: Install SDK and NDK components
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" "platforms;android-31" "build-tools;34.0.0" "ndk;25.2.9519653"

      # 10. CRITICAL: Configure Buildozer to use the correct SDK
      - name: Configure Buildozer using its own commands
        run: |
          # Find the NDK path dynamically
          export NDK_PATH=$(ls -d $ANDROID_HOME/ndk/* | tail -1)
          
          # Use `buildozer config set` to forcefully write the correct paths
          # This is the most reliable method.
          buildozer config set android.sdk_path $ANDROID_HOME
          buildozer config set android.ndk_path $NDK_PATH
          buildozer config set android.build_tools_version 34.0.0
          
          echo "âœ… Buildozer configuration has been updated."
          echo "--- Verifying spec file contents: ---"
          cat buildozer.spec | grep -E "android.sdk_path|android.ndk_path|android.build_tools_version"
          echo "------------------------------------"

      # 11. Build the APK
      - name: Build the APK with Buildozer
        run: |
          # The standard build sequence: update dependencies, clean, and then build
          buildozer -v android update
          buildozer -v android clean
          buildozer -v android debug

      # 12. Upload the final .apk file
      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Android-APK
          path: bin/*.apk
