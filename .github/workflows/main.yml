name: Build HushOS APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          echo "Initial disk space:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo apt-get autoremove -y
          sudo apt-get autoclean -y
          echo "Disk space after cleanup:"
          df -h

      - name: Set up Python, Buildozer, and Dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer cython
          pip install -r requirements.txt

      - name: Install Android cmdline-tools and dependencies (NO MORE LICENSE ERRORS)
        run: |
          ANDROID_SDK_ROOT="${{ github.workspace }}/.buildozer/android/platform/android-sdk"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"

          echo "Downloading Android cmdline-tools..."
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O tools.zip
          unzip tools.zip -d temp
          mv temp/cmdline-tools latest
          rm -rf temp tools.zip

          echo "cmdline-tools installed at $ANDROID_SDK_ROOT/cmdline-tools/latest"

          export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin

          SDKMANAGER="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"

          echo "Installing ONLY required components to AVOID license failures..."
          $SDKMANAGER --sdk_root=$ANDROID_SDK_ROOT --no_https --verbose \
            "platform-tools" "platforms;android-33" "build-tools;34.0.0"

          echo "Accepting licenses for REQUIRED components only..."
          yes | $SDKMANAGER --sdk_root=$ANDROID_SDK_ROOT --licenses || true

          echo "Verifying installed packages:"
          $SDKMANAGER --list_installed

      - name: Inject OpenAI API key
        run: |
          echo "Creating config.json in assets directory..."
          mkdir -p assets
          echo '{"openai_api_key": "${{ secrets.OPENAI_API_KEY }}"}' > assets/config.json
          echo "config.json created successfully."

      - name: Build APK with Buildozer
        run: |
          buildozer -v android debug
        env:
          GRADLE_OPTS: -Xmx4g -XX:MaxMetaspaceSize=512m -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError
          JAVA_OPTS: -Xmx3g -XX:MaxMetaspaceSize=512m
          _JAVA_OPTIONS: -Xmx3g -XX:MaxMetaspaceSize=512m
          GRADLE_MAX_WORKERS: 2

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: hush-os-apk
          path: bin/*.apk
          if-no-files-found: error
