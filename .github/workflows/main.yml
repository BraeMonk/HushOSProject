# Fixed Android APK Build Workflow for GitHub Actions
# This workflow builds Android APKs using Buildozer with proper configuration
name: Build Android APK

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-android:
    runs-on: ubuntu-22.04
    
    steps:
    # 1. Check out repository code
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. Cache Buildozer directory for faster builds
    - name: Cache Buildozer global directory
      uses: actions/cache@v4
      with:
        path: ~/.buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-

    # 3. Set up Java Development Kit (JDK) version 17
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    # 4. Set up Python (updated to newer version)
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    # 5. Install system dependencies
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --allow-unauthenticated \
          git zip unzip autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 \
          cmake libffi-dev libssl-dev build-essential \
          libltdl-dev python3-dev openjdk-17-jdk \
          ccache

    # 6. Set up Android SDK
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    # 7. Install SDK and NDK components
    - name: Install SDK and NDK components
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-33" \
          "build-tools;33.0.2" \
          "ndk;25.2.9519653"

    # 8. Install Python build tools
    - name: Install Buildozer and Cython
      run: |
        python -m pip install --upgrade pip
        pip install --user buildozer cython

    # 9. Add local bin to PATH
    - name: Add local bin to PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    # 10. Configure buildozer.spec file with correct paths
    - name: Configure Buildozer spec file
      run: |
        # Set environment variables
        export NDK_PATH="$ANDROID_HOME/ndk/25.2.9519653"
        export SDK_PATH="$ANDROID_HOME"
        
        # Update buildozer.spec file directly using sed
        sed -i "s|#android.sdk_path =.*|android.sdk_path = $SDK_PATH|" buildozer.spec
        sed -i "s|#android.ndk_path =.*|android.ndk_path = $NDK_PATH|" buildozer.spec
        sed -i "s|#android.build_tools_version =.*|android.build_tools_version = 33.0.2|" buildozer.spec
        sed -i "s|#android.api =.*|android.api = 33|" buildozer.spec
        sed -i "s|#android.minapi =.*|android.minapi = 21|" buildozer.spec
        sed -i "s|#android.ndk =.*|android.ndk = 25.2.9519653|" buildozer.spec
        
        # Also handle cases where the lines might not be commented
        sed -i "s|android.sdk_path =.*|android.sdk_path = $SDK_PATH|" buildozer.spec
        sed -i "s|android.ndk_path =.*|android.ndk_path = $NDK_PATH|" buildozer.spec
        sed -i "s|android.build_tools_version =.*|android.build_tools_version = 33.0.2|" buildozer.spec
        sed -i "s|android.api =.*|android.api = 33|" buildozer.spec
        sed -i "s|android.minapi =.*|android.minapi = 21|" buildozer.spec
        sed -i "s|android.ndk =.*|android.ndk = 25.2.9519653|" buildozer.spec
        
        # If the lines don't exist, add them
        if ! grep -q "android.sdk_path" buildozer.spec; then
          echo "android.sdk_path = $SDK_PATH" >> buildozer.spec
        fi
        if ! grep -q "android.ndk_path" buildozer.spec; then
          echo "android.ndk_path = $NDK_PATH" >> buildozer.spec
        fi
        if ! grep -q "android.build_tools_version" buildozer.spec; then
          echo "android.build_tools_version = 33.0.2" >> buildozer.spec
        fi
        if ! grep -q "android.api" buildozer.spec; then
          echo "android.api = 33" >> buildozer.spec
        fi
        if ! grep -q "android.minapi" buildozer.spec; then
          echo "android.minapi = 21" >> buildozer.spec
        fi
        if ! grep -q "android.ndk =" buildozer.spec; then
          echo "android.ndk = 25.2.9519653" >> buildozer.spec
        fi
        
        echo "âœ… Buildozer configuration updated"
        echo "--- Verifying spec file Android settings: ---"
        grep -E "android\.(sdk_path|ndk_path|build_tools_version|api|minapi|ndk)" buildozer.spec || echo "No Android settings found"
        echo "--------------------------------------------"

    # 11. Verify Android environment
    - name: Verify Android environment
      run: |
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "NDK Path: $ANDROID_HOME/ndk/25.2.9519653"
        echo "Java version:"
        java -version
        echo "Android SDK tools:"
        ls -la $ANDROID_HOME/cmdline-tools/latest/bin/
        echo "NDK contents:"
        ls -la $ANDROID_HOME/ndk/ || echo "NDK directory not found"

    # 12. Build the APK
    - name: Build APK with Buildozer
      run: |
        # Clean any previous builds
        buildozer android clean
        
        # Build the APK
        buildozer -v android debug
      env:
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        JAVA_HOME: ${{ env.JAVA_HOME }}

    # 13. Upload the APK as artifact
    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Android-APK
        path: bin/*.apk
        if-no-files-found: error

    # 14. List build output for debugging
    - name: List build output
      if: always()
      run: |
        echo "Contents of bin directory:"
        ls -la bin/ || echo "No bin directory found"
        echo "Contents of .buildozer directory:"
        ls -la .buildozer/ || echo "No .buildozer directory found"
