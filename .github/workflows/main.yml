name: Build HushOS APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          echo "Initial disk space:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo apt-get autoremove -y
          sudo apt-get autoclean -y
          echo "Disk space after cleanup:"
          df -h

      - name: Set up Python, Buildozer, and Dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer cython
          # Install your app's Python dependencies
          pip install -r requirements.txt

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Pre-install Build Tools and Accept Licenses
        run: |
          echo "Accepting all SDK licenses..."
          yes | sdkmanager --licenses > /dev/null || true
          
          echo "Installing required build-tools to prevent conflicts..."
          yes | sdkmanager "build-tools;34.0.0" "build-tools;36.0.0" > /dev/null || true

      - name: Build with Buildozer and Inject API Key
        run: |
          # Step 1: Create the assets directory and the config.json file
          # This ensures the file exists before Buildozer runs.
          echo "Creating config.json in assets directory..."
          mkdir -p assets
          echo '{"openai_api_key": "${{ secrets.OPENAI_API_KEY }}"}' > assets/config.json
          echo "config.json created successfully."

          # Step 2: Run the Buildozer build
          # Buildozer will now use your modified .spec file to find and package the assets directory.
          buildozer -v android debug
        env:
          # Force Buildozer to use the system's pre-configured Android SDK and NDK
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
          
          # Memory settings for Gradle and Java processes to prevent crashes
          GRADLE_OPTS: -Xmx4g -XX:MaxMetaspaceSize=512m -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError
          JAVA_OPTS: -Xmx3g -XX:MaxMetaspaceSize=512m
          _JAVA_OPTIONS: -Xmx3g -XX:MaxMetaspaceSize=512m
          # Reduce parallelism to save memory
          GRADLE_MAX_WORKERS: 2

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: hush-os-apk
          path: bin/*.apk
          if-no-files-found: error

